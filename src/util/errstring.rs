use std::error::Error;
use std::fmt;
use std::fmt::Debug;

////////////////////////////////////////////////////////////////////////////////
#[derive(Debug, Clone)]
pub struct ErrString {
  string: String,
}

////////////////////////////////////////////////////////////////////////////////
impl Error for ErrString {}

////////////////////////////////////////////////////////////////////////////////
impl fmt::Display for ErrString {
  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    write!(f, "Error: {}", self.string)
  }
}

////////////////////////////////////////////////////////////////////////////////
impl ErrString {
  pub fn new(string: &str) -> ErrString {
    ErrString {
      string: string.to_string(),
    }
  }
}
