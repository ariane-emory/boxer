use crate::block::*;

////////////////////////////////////////////////////////////////////////////////
pub struct Value<T: Copy> {
  output: OutputSignalRef<T>,
}
////////////////////////////////////////////////////////////////////////////////
impl<T: Copy> Value<T> {
  pub fn new(value: T) -> Self {
    Value {
      output: new_signal(value),
    }
  }

  pub fn set(&mut self, value: T) {
    self.output.set(value);
  }
}
////////////////////////////////////////////////////////////////////////////////
impl<T: Copy> Steppable for Value<T> {
  fn step(&mut self) {}
}
////////////////////////////////////////////////////////////////////////////////
impl<T: Copy> HasOutputSignal<T> for Value<T> {
  fn output(&self) -> &OutputSignalRef<T> {
    &self.output
  }
}
