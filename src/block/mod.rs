#![allow(dead_code)]

////////////////////////////////////////////////////////////////////////////////////////////////////
pub enum BlockSignal {
  BooleanSignal(bool),
  UnsignedSignal(isize),
  SignedSignal(usize),
}

////////////////////////////////////////////////////////////////////////////////////////////////////
pub trait BlockOutput {
  fn read(&self) -> BlockSignal;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
pub trait Block {
  fn step(&mut self);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
struct Adder<'a> {
  left_addend: &'a dyn BlockOutput,
  right_addend: &'a dyn BlockOutput,
}

////////////////////////////////////////////////////////////////////////////////////////////////////
impl<'a> Adder<'a> {
  fn new(left_addend: &'a dyn BlockOutput, right_addend: &'a dyn BlockOutput) -> Self {
    Adder {
      left_addend,
      right_addend,
    }
  }
}
